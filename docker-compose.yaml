version: "3.9"

services:
  reverse-proxy:
    build:
      context: ./reverse-proxy
      dockerfile: Dockerfile
    container_name: reverse-proxy
    restart: on-failure
    ports:
      - "8000:8000"
    depends_on:
      - auth-service
      - open-data-service
      - student-housing-service
    networks:
      - project-net   


  auth-service:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: auth
    environment:
      - SERVICE_PORT=${AUTH_SERVICE_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - ISSUER=demo-auth
    expose:
      - "${AUTH_SERVICE_PORT}"
    networks:
      - project-net
    depends_on:
      database:
        condition: service_started
    restart: unless-stopped
  open-data-service:
    build:
      context: ./open-data
      dockerfile: Dockerfile
    container_name: open-data
    environment:
      - SERVICE_PORT=${OPEN_DATA_SERVICE_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
    expose:
      - "${OPEN_DATA_SERVICE_PORT}"
    networks:
      - project-net
    depends_on:
      database:
        condition: service_started
    restart: unless-stopped

  student-housing-service:
    build:
      context: ./student-housing
      dockerfile: Dockerfile
    container_name: student-housing
    environment:
      - SERVICE_PORT=${STUDENT_HOUSING_SERVICE_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
    expose:
      - "${STUDENT_HOUSING_SERVICE_PORT}"
    networks:
      - project-net
    depends_on:
      database:
        condition: service_started
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    ports:
      - "3213:5173"       
    env_file:
      - .env           
    environment:
      - VITE_API_URL=${VITE_API_URL}
    depends_on:
      - reverse-proxy
    networks:
      - project-net
    restart: unless-stopped
    volumes:
      - ./client:/app   
      - /app/node_modules  


  database:
    image: postgres:15
    container_name: database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    command: [ "postgres", "-c", "shared_preload_libraries=pg_trgm" ]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - project-net
    restart: unless-stopped

volumes:
  postgres_data:


networks:
  project-net:
    driver: bridge
