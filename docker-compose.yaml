version: "3.9"

services:
  reverse-proxy:
    build: ./reverse-proxy
    container_name: reverse-proxy
    ports:
      - "${REVERSE_PROXY_SERVICE_PORT}:8080"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - OPEN_DATA_SERVICE_URL=${OPEN_DATA_SERVICE_URL}
      - STUDENT_HOUSING_SERVICE_URL=${STUDENT_HOUSING_SERVICE_URL}
    depends_on:
      - auth-service
      - open-data
      - student-housing
    networks:
      - project-net
    restart: unless-stopped

  auth-service:
    build: ./auth
    container_name: auth-service
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - ISSUER=demo-auth
    expose:
      - "9000"
    networks:
      - project-net
    restart: unless-stopped

  open-data:
    build:
      context: ./open-data
      dockerfile: Dockerfile
    container_name: open-data
    environment:
      - SERVICE_PORT=${OPEN_DATA_SERVICE_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
    expose:
      - "${OPEN_DATA_SERVICE_PORT}"
    networks:
      - project-net
    depends_on:
      database:
        condition: service_started
    restart: unless-stopped

  student-housing:
    build:
      context: ./student-housing
      dockerfile: Dockerfile
    container_name: student-housing
    environment:
      - SERVICE_PORT=${STUDENT_HOUSING_SERVICE_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
    expose:
      - "${STUDENT_HOUSING_SERVICE_PORT}"
    networks:
      - project-net
    depends_on:
      database:
        condition: service_started
    restart: unless-stopped

  client:
    build:
      context: ./client
    container_name: client
    ports:
      - "${FRONTEND_PORT}:80" # NGINX u kontejneru sluša 80
    environment:
      - VITE_API_URL=${VITE_API_URL}
    depends_on:
      - reverse-proxy
    networks:
      - project-net
    restart: unless-stopped

  database:
    image: postgres:15
    container_name: database
    # ⚠️ Za produkciju ukloniti ovu liniju; za lokalni razvoj može ostati:
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    command: [ "postgres", "-c", "shared_preload_libraries=pg_trgm" ]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - project-net
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  project-net:
    driver: bridge
